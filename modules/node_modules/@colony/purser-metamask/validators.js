"use strict";
/* @flow */
Object.defineProperty(exports, "__esModule", { value: true });
const messages_1 = require("./messages");
/**
 * Validate Metamask's internal state object.
 * Basically, it checks for important props to be there.
 *
 * @method validateMetamaskState
 *
 * @param {Object} stateObject State object who's props to check
 *
 * @return {boolean} Throws if object is not valid. If it's all good, it returns true.
 */
exports.validateMetamaskState = (stateObject) => {
    if (!stateObject || typeof stateObject !== 'object') {
        throw new Error(messages_1.validators.noState);
    }
    if (!stateObject.selectedAddress) {
        throw new Error(messages_1.validators.noStateAddress);
    }
    if (!stateObject.networkVersion) {
        throw new Error(messages_1.validators.noStateNetwork);
    }
    return true;
};
const metamaskValidators = {
    validateMetamaskState: exports.validateMetamaskState,
};
exports.default = metamaskValidators;
