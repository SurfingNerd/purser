"use strict";
/* @flow */
Object.defineProperty(exports, "__esModule", { value: true });
/*
 * Trezor service Url
 */
exports.SERVICE_DOMAIN = 'https://connect.trezor.io';
exports.SERVICE_VERSION = 4;
exports.SERVICE_URL = 'popup/popup.html';
exports.SERVICE_KEY = 'v';
/*
 * Trezor service prompt window name
 */
exports.WINDOW_NAME = 'trezor-service-connection';
/*
 * Prompt window options
 */
exports.PROMPT_WIDTH = 600;
exports.PROMPT_HEIGHT = 500;
exports.WINDOW_FEATURES = {
    width: exports.PROMPT_WIDTH,
    height: exports.PROMPT_HEIGHT,
    /*
     * We need the actual screen size, not the browser window size, since
     * we want to center the prompt in the middle of the screen.
     */
    left: (window.screen.width - exports.PROMPT_WIDTH) / 2,
    top: (window.screen.height - exports.PROMPT_HEIGHT) / 2,
    menubar: false,
    toolbar: false,
    location: false,
    personalbar: false,
    status: false,
};
/*
 * Firmware versions
 *
 * Note: 1.4.0 is the first version that supports Ethereum
 */
exports.FIRMWARE_MIN = '1.4.0';
/*
 * This list is not by any strech complete. It's just the ones we use.
 */
exports.STD_ERRORS = {
    CANCEL_ACC_EXPORT: 'Cancelled',
    CANCEL_TX_SIGN: 'Action cancelled by user',
    INVALID_SIGN: 'Invalid signature',
};
/*
 * Prop names used to validate user input against
 */
exports.REQUIRED_PROPS = {
    SIGN_TRANSACTION: ['to'],
    SIGN_TRANSACTION_CONTRACT: ['inputData'],
};
